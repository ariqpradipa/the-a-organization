name: Build and Deploy Go Gin Backend Container

on:
    push:
        branches: 
            - main
    workflow_dispatch:

jobs:
  cd-build-and-deploy-go-gin-backend-container:
    runs-on: ubuntu-latest

    steps:
      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Build and deploy go-gin-backend for x64
      #   uses: docker/build-push-action@v6
      #   with:
      #     context: "{{defaultContext}}:./go-gin-backend"
      #     push: true
      #     tags: ${{ secrets.DOCKERHUB_USERNAME }}/go-gin-backend:latest
      
      # - name: Build and deploy go-gin-backend for ARM64 (aarch64)
      #   uses: docker/build-push-action@v6
      #   with:
      #     context: "{{defaultContext}}:./go-gin-backend"
      #     push: true
      #     tags: ${{ secrets.DOCKERHUB_USERNAME }}/go-gin-backend:latest-arm64
      #     platforms: linux/arm64
      
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Cloudflared
        run: |
          # Add cloudflare gpg key
          sudo mkdir -p --mode=0755 /usr/share/keyrings
          curl -fsSL https://pkg.cloudflare.com/cloudflare-main.gpg | sudo tee /usr/share/keyrings/cloudflare-main.gpg >/dev/null
          
          # Add this repo to your apt repositories
          echo 'deb [signed-by=/usr/share/keyrings/cloudflare-main.gpg] https://pkg.cloudflare.com/cloudflared jammy main' | sudo tee /etc/apt/sources.list.d/cloudflared.list
          
          # install cloudflared
          sudo apt-get update && sudo apt-get install cloudflared

      - name: Append SSH config
        run: |
          sudo echo "Host ${{ secrets.SSH_HOST }}" >> /root/.ssh/config
          sudo echo "ProxyCommand cloudflared access ssh --hostname %h" >> /root/.ssh/config
      
      - name: Print out the content of the SSH config file
        run: cat ~/.ssh/config

      - name: copy file via ssh password
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "go-gin-backend-manifest.yaml"
          target: "~/kubernetes/deployments/go-gin-backend-manifest.yaml"

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: kubectl apply -f ~/kubernetes/deployments/go-gin-backend-manifest.yaml